{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReasonCodes = void 0;\nexports.ReasonCodes = {\n  0: '',\n  1: 'Unacceptable protocol version',\n  2: 'Identifier rejected',\n  3: 'Server unavailable',\n  4: 'Bad username or password',\n  5: 'Not authorized',\n  16: 'No matching subscribers',\n  17: 'No subscription existed',\n  128: 'Unspecified error',\n  129: 'Malformed Packet',\n  130: 'Protocol Error',\n  131: 'Implementation specific error',\n  132: 'Unsupported Protocol Version',\n  133: 'Client Identifier not valid',\n  134: 'Bad User Name or Password',\n  135: 'Not authorized',\n  136: 'Server unavailable',\n  137: 'Server busy',\n  138: 'Banned',\n  139: 'Server shutting down',\n  140: 'Bad authentication method',\n  141: 'Keep Alive timeout',\n  142: 'Session taken over',\n  143: 'Topic Filter invalid',\n  144: 'Topic Name invalid',\n  145: 'Packet identifier in use',\n  146: 'Packet Identifier not found',\n  147: 'Receive Maximum exceeded',\n  148: 'Topic Alias invalid',\n  149: 'Packet too large',\n  150: 'Message rate too high',\n  151: 'Quota exceeded',\n  152: 'Administrative action',\n  153: 'Payload format invalid',\n  154: 'Retain not supported',\n  155: 'QoS not supported',\n  156: 'Use another server',\n  157: 'Server moved',\n  158: 'Shared Subscriptions not supported',\n  159: 'Connection rate exceeded',\n  160: 'Maximum connect time',\n  161: 'Subscription Identifiers not supported',\n  162: 'Wildcard Subscriptions not supported'\n};\nconst handleAck = (client, packet) => {\n  const {\n    messageId\n  } = packet;\n  const type = packet.cmd;\n  let response = null;\n  const cb = client.outgoing[messageId] ? client.outgoing[messageId].cb : null;\n  let err;\n  if (!cb) {\n    client.log('_handleAck :: Server sent an ack in error. Ignoring.');\n    return;\n  }\n  client.log('_handleAck :: packet type', type);\n  switch (type) {\n    case 'pubcomp':\n    case 'puback':\n      {\n        const pubackRC = packet.reasonCode;\n        if (pubackRC && pubackRC > 0 && pubackRC !== 16) {\n          err = new Error(`Publish error: ${exports.ReasonCodes[pubackRC]}`);\n          err.code = pubackRC;\n          client['_removeOutgoingAndStoreMessage'](messageId, () => {\n            cb(err, packet);\n          });\n        } else {\n          client['_removeOutgoingAndStoreMessage'](messageId, cb);\n        }\n        break;\n      }\n    case 'pubrec':\n      {\n        response = {\n          cmd: 'pubrel',\n          qos: 2,\n          messageId\n        };\n        const pubrecRC = packet.reasonCode;\n        if (pubrecRC && pubrecRC > 0 && pubrecRC !== 16) {\n          err = new Error(`Publish error: ${exports.ReasonCodes[pubrecRC]}`);\n          err.code = pubrecRC;\n          client['_removeOutgoingAndStoreMessage'](messageId, () => {\n            cb(err, packet);\n          });\n        } else {\n          client['_sendPacket'](response);\n        }\n        break;\n      }\n    case 'suback':\n      {\n        delete client.outgoing[messageId];\n        client.messageIdProvider.deallocate(messageId);\n        const granted = packet.granted;\n        for (let grantedI = 0; grantedI < granted.length; grantedI++) {\n          if ((granted[grantedI] & 0x80) !== 0) {\n            const topics = client.messageIdToTopic[messageId];\n            if (topics) {\n              topics.forEach(topic => {\n                delete client['_resubscribeTopics'][topic];\n              });\n            }\n          }\n        }\n        delete client.messageIdToTopic[messageId];\n        client['_invokeStoreProcessingQueue']();\n        cb(null, packet);\n        break;\n      }\n    case 'unsuback':\n      {\n        delete client.outgoing[messageId];\n        client.messageIdProvider.deallocate(messageId);\n        client['_invokeStoreProcessingQueue']();\n        cb(null);\n        break;\n      }\n    default:\n      client.emit('error', new Error('unrecognized packet type'));\n  }\n  if (client.disconnecting && Object.keys(client.outgoing).length === 0) {\n    client.emit('outgoingEmpty');\n  }\n};\nexports.default = handleAck;","map":{"version":3,"names":["exports","ReasonCodes","handleAck","client","packet","messageId","type","cmd","response","cb","outgoing","err","log","pubackRC","reasonCode","Error","code","qos","pubrecRC","messageIdProvider","deallocate","granted","grantedI","length","topics","messageIdToTopic","forEach","topic","emit","disconnecting","Object","keys","default"],"sources":["C:\\Users\\vuhuy\\OneDrive - Hanoi University of Science and Technology\\NEWCODE\\ITSS_JP_2\\node_modules\\mqtt\\src\\lib\\handlers\\ack.ts"],"sourcesContent":["// Other Socket Errors: EADDRINUSE, ECONNRESET, ENOTFOUND, ETIMEDOUT.\r\n\r\nimport { PacketHandler } from '../shared'\r\n\r\nexport const ReasonCodes = {\r\n\t0: '',\r\n\t1: 'Unacceptable protocol version',\r\n\t2: 'Identifier rejected',\r\n\t3: 'Server unavailable',\r\n\t4: 'Bad username or password',\r\n\t5: 'Not authorized',\r\n\t16: 'No matching subscribers',\r\n\t17: 'No subscription existed',\r\n\t128: 'Unspecified error',\r\n\t129: 'Malformed Packet',\r\n\t130: 'Protocol Error',\r\n\t131: 'Implementation specific error',\r\n\t132: 'Unsupported Protocol Version',\r\n\t133: 'Client Identifier not valid',\r\n\t134: 'Bad User Name or Password',\r\n\t135: 'Not authorized',\r\n\t136: 'Server unavailable',\r\n\t137: 'Server busy',\r\n\t138: 'Banned',\r\n\t139: 'Server shutting down',\r\n\t140: 'Bad authentication method',\r\n\t141: 'Keep Alive timeout',\r\n\t142: 'Session taken over',\r\n\t143: 'Topic Filter invalid',\r\n\t144: 'Topic Name invalid',\r\n\t145: 'Packet identifier in use',\r\n\t146: 'Packet Identifier not found',\r\n\t147: 'Receive Maximum exceeded',\r\n\t148: 'Topic Alias invalid',\r\n\t149: 'Packet too large',\r\n\t150: 'Message rate too high',\r\n\t151: 'Quota exceeded',\r\n\t152: 'Administrative action',\r\n\t153: 'Payload format invalid',\r\n\t154: 'Retain not supported',\r\n\t155: 'QoS not supported',\r\n\t156: 'Use another server',\r\n\t157: 'Server moved',\r\n\t158: 'Shared Subscriptions not supported',\r\n\t159: 'Connection rate exceeded',\r\n\t160: 'Maximum connect time',\r\n\t161: 'Subscription Identifiers not supported',\r\n\t162: 'Wildcard Subscriptions not supported',\r\n}\r\n\r\nconst handleAck: PacketHandler = (client, packet) => {\r\n\t/* eslint no-fallthrough: \"off\" */\r\n\tconst { messageId } = packet\r\n\tconst type = packet.cmd\r\n\tlet response = null\r\n\tconst cb = client.outgoing[messageId] ? client.outgoing[messageId].cb : null\r\n\tlet err\r\n\r\n\t// Checking `!cb` happens to work, but it's not technically \"correct\".\r\n\t//\r\n\t// Why? client code assumes client \"no callback\" is the same as client \"we're not\r\n\t// waiting for responses\" (puback, pubrec, pubcomp, suback, or unsuback).\r\n\t//\r\n\t// It would be better to check `if (!client.outgoing[messageId])` here, but\r\n\t// there's no reason to change it and risk (another) regression.\r\n\t//\r\n\t// The only reason client code works is becaues code in MqttClient.publish,\r\n\t// MqttClinet.subscribe, and MqttClient.unsubscribe ensures client we will\r\n\t// have a callback even if the user doesn't pass one in.)\r\n\tif (!cb) {\r\n\t\tclient.log('_handleAck :: Server sent an ack in error. Ignoring.')\r\n\t\t// Server sent an ack in error, ignore it.\r\n\t\treturn\r\n\t}\r\n\r\n\t// Process\r\n\tclient.log('_handleAck :: packet type', type)\r\n\tswitch (type) {\r\n\t\tcase 'pubcomp':\r\n\t\t// same thing as puback for QoS 2\r\n\t\tcase 'puback': {\r\n\t\t\tconst pubackRC = packet.reasonCode\r\n\t\t\t// Callback - we're done\r\n\t\t\tif (pubackRC && pubackRC > 0 && pubackRC !== 16) {\r\n\t\t\t\terr = new Error(`Publish error: ${ReasonCodes[pubackRC]}`)\r\n\t\t\t\terr.code = pubackRC\r\n\t\t\t\tclient['_removeOutgoingAndStoreMessage'](messageId, () => {\r\n\t\t\t\t\tcb(err, packet)\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tclient['_removeOutgoingAndStoreMessage'](messageId, cb)\r\n\t\t\t}\r\n\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tcase 'pubrec': {\r\n\t\t\tresponse = {\r\n\t\t\t\tcmd: 'pubrel',\r\n\t\t\t\tqos: 2,\r\n\t\t\t\tmessageId,\r\n\t\t\t}\r\n\t\t\tconst pubrecRC = packet.reasonCode\r\n\r\n\t\t\tif (pubrecRC && pubrecRC > 0 && pubrecRC !== 16) {\r\n\t\t\t\terr = new Error(`Publish error: ${ReasonCodes[pubrecRC]}`)\r\n\t\t\t\terr.code = pubrecRC\r\n\t\t\t\tclient['_removeOutgoingAndStoreMessage'](messageId, () => {\r\n\t\t\t\t\tcb(err, packet)\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tclient['_sendPacket'](response)\r\n\t\t\t}\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tcase 'suback': {\r\n\t\t\tdelete client.outgoing[messageId]\r\n\t\t\tclient.messageIdProvider.deallocate(messageId)\r\n\t\t\tconst granted = packet.granted as number[]\r\n\t\t\tfor (let grantedI = 0; grantedI < granted.length; grantedI++) {\r\n\t\t\t\tif ((granted[grantedI] & 0x80) !== 0) {\r\n\t\t\t\t\t// suback with Failure status\r\n\t\t\t\t\tconst topics = client.messageIdToTopic[messageId]\r\n\t\t\t\t\tif (topics) {\r\n\t\t\t\t\t\ttopics.forEach((topic) => {\r\n\t\t\t\t\t\t\tdelete client['_resubscribeTopics'][topic]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete client.messageIdToTopic[messageId]\r\n\t\t\tclient['_invokeStoreProcessingQueue']()\r\n\t\t\tcb(null, packet)\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tcase 'unsuback': {\r\n\t\t\tdelete client.outgoing[messageId]\r\n\t\t\tclient.messageIdProvider.deallocate(messageId)\r\n\t\t\tclient['_invokeStoreProcessingQueue']()\r\n\t\t\tcb(null)\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\tclient.emit('error', new Error('unrecognized packet type'))\r\n\t}\r\n\r\n\tif (client.disconnecting && Object.keys(client.outgoing).length === 0) {\r\n\t\tclient.emit('outgoingEmpty')\r\n\t}\r\n}\r\n\r\nexport default handleAck\r\n"],"mappings":";;;;;;AAIaA,OAAA,CAAAC,WAAW,GAAG;EAC1B,CAAC,EAAE,EAAE;EACL,CAAC,EAAE,+BAA+B;EAClC,CAAC,EAAE,qBAAqB;EACxB,CAAC,EAAE,oBAAoB;EACvB,CAAC,EAAE,0BAA0B;EAC7B,CAAC,EAAE,gBAAgB;EACnB,EAAE,EAAE,yBAAyB;EAC7B,EAAE,EAAE,yBAAyB;EAC7B,GAAG,EAAE,mBAAmB;EACxB,GAAG,EAAE,kBAAkB;EACvB,GAAG,EAAE,gBAAgB;EACrB,GAAG,EAAE,+BAA+B;EACpC,GAAG,EAAE,8BAA8B;EACnC,GAAG,EAAE,6BAA6B;EAClC,GAAG,EAAE,2BAA2B;EAChC,GAAG,EAAE,gBAAgB;EACrB,GAAG,EAAE,oBAAoB;EACzB,GAAG,EAAE,aAAa;EAClB,GAAG,EAAE,QAAQ;EACb,GAAG,EAAE,sBAAsB;EAC3B,GAAG,EAAE,2BAA2B;EAChC,GAAG,EAAE,oBAAoB;EACzB,GAAG,EAAE,oBAAoB;EACzB,GAAG,EAAE,sBAAsB;EAC3B,GAAG,EAAE,oBAAoB;EACzB,GAAG,EAAE,0BAA0B;EAC/B,GAAG,EAAE,6BAA6B;EAClC,GAAG,EAAE,0BAA0B;EAC/B,GAAG,EAAE,qBAAqB;EAC1B,GAAG,EAAE,kBAAkB;EACvB,GAAG,EAAE,uBAAuB;EAC5B,GAAG,EAAE,gBAAgB;EACrB,GAAG,EAAE,uBAAuB;EAC5B,GAAG,EAAE,wBAAwB;EAC7B,GAAG,EAAE,sBAAsB;EAC3B,GAAG,EAAE,mBAAmB;EACxB,GAAG,EAAE,oBAAoB;EACzB,GAAG,EAAE,cAAc;EACnB,GAAG,EAAE,oCAAoC;EACzC,GAAG,EAAE,0BAA0B;EAC/B,GAAG,EAAE,sBAAsB;EAC3B,GAAG,EAAE,wCAAwC;EAC7C,GAAG,EAAE;CACL;AAED,MAAMC,SAAS,GAAkBA,CAACC,MAAM,EAAEC,MAAM,KAAI;EAEnD,MAAM;IAAEC;EAAS,CAAE,GAAGD,MAAM;EAC5B,MAAME,IAAI,GAAGF,MAAM,CAACG,GAAG;EACvB,IAAIC,QAAQ,GAAG,IAAI;EACnB,MAAMC,EAAE,GAAGN,MAAM,CAACO,QAAQ,CAACL,SAAS,CAAC,GAAGF,MAAM,CAACO,QAAQ,CAACL,SAAS,CAAC,CAACI,EAAE,GAAG,IAAI;EAC5E,IAAIE,GAAG;EAaP,IAAI,CAACF,EAAE,EAAE;IACRN,MAAM,CAACS,GAAG,CAAC,sDAAsD,CAAC;IAElE;;EAIDT,MAAM,CAACS,GAAG,CAAC,2BAA2B,EAAEN,IAAI,CAAC;EAC7C,QAAQA,IAAI;IACX,KAAK,SAAS;IAEd,KAAK,QAAQ;MAAE;QACd,MAAMO,QAAQ,GAAGT,MAAM,CAACU,UAAU;QAElC,IAAID,QAAQ,IAAIA,QAAQ,GAAG,CAAC,IAAIA,QAAQ,KAAK,EAAE,EAAE;UAChDF,GAAG,GAAG,IAAII,KAAK,CAAC,kBAAkBf,OAAA,CAAAC,WAAW,CAACY,QAAQ,CAAC,EAAE,CAAC;UAC1DF,GAAG,CAACK,IAAI,GAAGH,QAAQ;UACnBV,MAAM,CAAC,gCAAgC,CAAC,CAACE,SAAS,EAAE,MAAK;YACxDI,EAAE,CAACE,GAAG,EAAEP,MAAM,CAAC;UAChB,CAAC,CAAC;SACF,MAAM;UACND,MAAM,CAAC,gCAAgC,CAAC,CAACE,SAAS,EAAEI,EAAE,CAAC;;QAGxD;;IAED,KAAK,QAAQ;MAAE;QACdD,QAAQ,GAAG;UACVD,GAAG,EAAE,QAAQ;UACbU,GAAG,EAAE,CAAC;UACNZ;SACA;QACD,MAAMa,QAAQ,GAAGd,MAAM,CAACU,UAAU;QAElC,IAAII,QAAQ,IAAIA,QAAQ,GAAG,CAAC,IAAIA,QAAQ,KAAK,EAAE,EAAE;UAChDP,GAAG,GAAG,IAAII,KAAK,CAAC,kBAAkBf,OAAA,CAAAC,WAAW,CAACiB,QAAQ,CAAC,EAAE,CAAC;UAC1DP,GAAG,CAACK,IAAI,GAAGE,QAAQ;UACnBf,MAAM,CAAC,gCAAgC,CAAC,CAACE,SAAS,EAAE,MAAK;YACxDI,EAAE,CAACE,GAAG,EAAEP,MAAM,CAAC;UAChB,CAAC,CAAC;SACF,MAAM;UACND,MAAM,CAAC,aAAa,CAAC,CAACK,QAAQ,CAAC;;QAEhC;;IAED,KAAK,QAAQ;MAAE;QACd,OAAOL,MAAM,CAACO,QAAQ,CAACL,SAAS,CAAC;QACjCF,MAAM,CAACgB,iBAAiB,CAACC,UAAU,CAACf,SAAS,CAAC;QAC9C,MAAMgB,OAAO,GAAGjB,MAAM,CAACiB,OAAmB;QAC1C,KAAK,IAAIC,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAGD,OAAO,CAACE,MAAM,EAAED,QAAQ,EAAE,EAAE;UAC7D,IAAI,CAACD,OAAO,CAACC,QAAQ,CAAC,GAAG,IAAI,MAAM,CAAC,EAAE;YAErC,MAAME,MAAM,GAAGrB,MAAM,CAACsB,gBAAgB,CAACpB,SAAS,CAAC;YACjD,IAAImB,MAAM,EAAE;cACXA,MAAM,CAACE,OAAO,CAAEC,KAAK,IAAI;gBACxB,OAAOxB,MAAM,CAAC,oBAAoB,CAAC,CAACwB,KAAK,CAAC;cAC3C,CAAC,CAAC;;;;QAIL,OAAOxB,MAAM,CAACsB,gBAAgB,CAACpB,SAAS,CAAC;QACzCF,MAAM,CAAC,6BAA6B,CAAC,EAAE;QACvCM,EAAE,CAAC,IAAI,EAAEL,MAAM,CAAC;QAChB;;IAED,KAAK,UAAU;MAAE;QAChB,OAAOD,MAAM,CAACO,QAAQ,CAACL,SAAS,CAAC;QACjCF,MAAM,CAACgB,iBAAiB,CAACC,UAAU,CAACf,SAAS,CAAC;QAC9CF,MAAM,CAAC,6BAA6B,CAAC,EAAE;QACvCM,EAAE,CAAC,IAAI,CAAC;QACR;;IAED;MACCN,MAAM,CAACyB,IAAI,CAAC,OAAO,EAAE,IAAIb,KAAK,CAAC,0BAA0B,CAAC,CAAC;;EAG7D,IAAIZ,MAAM,CAAC0B,aAAa,IAAIC,MAAM,CAACC,IAAI,CAAC5B,MAAM,CAACO,QAAQ,CAAC,CAACa,MAAM,KAAK,CAAC,EAAE;IACtEpB,MAAM,CAACyB,IAAI,CAAC,eAAe,CAAC;;AAE9B,CAAC;AAED5B,OAAA,CAAAgC,OAAA,GAAe9B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}