{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst lru_cache_1 = require(\"lru-cache\");\nconst number_allocator_1 = require(\"number-allocator\");\nclass TopicAliasSend {\n  constructor(max) {\n    if (max > 0) {\n      this.aliasToTopic = new lru_cache_1.LRUCache({\n        max\n      });\n      this.topicToAlias = {};\n      this.numberAllocator = new number_allocator_1.NumberAllocator(1, max);\n      this.max = max;\n      this.length = 0;\n    }\n  }\n  put(topic, alias) {\n    if (alias === 0 || alias > this.max) {\n      return false;\n    }\n    const entry = this.aliasToTopic.get(alias);\n    if (entry) {\n      delete this.topicToAlias[entry];\n    }\n    this.aliasToTopic.set(alias, topic);\n    this.topicToAlias[topic] = alias;\n    this.numberAllocator.use(alias);\n    this.length = this.aliasToTopic.size;\n    return true;\n  }\n  getTopicByAlias(alias) {\n    return this.aliasToTopic.get(alias);\n  }\n  getAliasByTopic(topic) {\n    const alias = this.topicToAlias[topic];\n    if (typeof alias !== 'undefined') {\n      this.aliasToTopic.get(alias);\n    }\n    return alias;\n  }\n  clear() {\n    this.aliasToTopic.clear();\n    this.topicToAlias = {};\n    this.numberAllocator.clear();\n    this.length = 0;\n  }\n  getLruAlias() {\n    const alias = this.numberAllocator.firstVacant();\n    if (alias) return alias;\n    return [...this.aliasToTopic.keys()][this.aliasToTopic.size - 1];\n  }\n}\nexports.default = TopicAliasSend;","map":{"version":3,"names":["lru_cache_1","require","number_allocator_1","TopicAliasSend","constructor","max","aliasToTopic","LRUCache","topicToAlias","numberAllocator","NumberAllocator","length","put","topic","alias","entry","get","set","use","size","getTopicByAlias","getAliasByTopic","clear","getLruAlias","firstVacant","keys","exports","default"],"sources":["C:\\Users\\vuhuy\\OneDrive - Hanoi University of Science and Technology\\NEWCODE\\ITSS_JP_2\\node_modules\\mqtt\\src\\lib\\topic-alias-send.ts"],"sourcesContent":["/**\r\n * Module dependencies\r\n */\r\nimport { LRUCache } from 'lru-cache'\r\nimport { NumberAllocator } from 'number-allocator'\r\n\r\n/**\r\n * Topic Alias sending manager\r\n * This holds both topic to alias and alias to topic map\r\n * @param {Number} [max] - topic alias maximum entries\r\n */\r\nexport default class TopicAliasSend {\r\n\tprivate aliasToTopic: LRUCache<number, string>\r\n\r\n\tprivate topicToAlias: Record<string, number>\r\n\r\n\tprivate max: number\r\n\r\n\tprivate numberAllocator: NumberAllocator\r\n\r\n\tpublic length: number\r\n\r\n\tconstructor(max: number) {\r\n\t\tif (max > 0) {\r\n\t\t\tthis.aliasToTopic = new LRUCache<number, string>({ max })\r\n\t\t\tthis.topicToAlias = {}\r\n\t\t\tthis.numberAllocator = new NumberAllocator(1, max)\r\n\t\t\tthis.max = max\r\n\t\t\tthis.length = 0\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Insert or update topic - alias entry.\r\n\t * @param {String} [topic] - topic\r\n\t * @param {Number} [alias] - topic alias\r\n\t * @returns {Boolean} - if success return true otherwise false\r\n\t */\r\n\tput(topic: string, alias: number): boolean {\r\n\t\tif (alias === 0 || alias > this.max) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tconst entry = this.aliasToTopic.get(alias)\r\n\t\tif (entry) {\r\n\t\t\tdelete this.topicToAlias[entry]\r\n\t\t}\r\n\t\tthis.aliasToTopic.set(alias, topic)\r\n\t\tthis.topicToAlias[topic] = alias\r\n\t\tthis.numberAllocator.use(alias)\r\n\t\tthis.length = this.aliasToTopic.size\r\n\t\treturn true\r\n\t}\r\n\r\n\t/**\r\n\t * Get topic by alias\r\n\t * @param {Number} [alias] - topic alias\r\n\t * @returns {String} - if mapped topic exists return topic, otherwise return undefined\r\n\t */\r\n\tgetTopicByAlias(alias: number): string {\r\n\t\treturn this.aliasToTopic.get(alias)\r\n\t}\r\n\r\n\t/**\r\n\t * Get topic by alias\r\n\t * @param {String} [topic] - topic\r\n\t * @returns {Number} - if mapped topic exists return topic alias, otherwise return undefined\r\n\t */\r\n\tgetAliasByTopic(topic: string): number | undefined {\r\n\t\tconst alias = this.topicToAlias[topic]\r\n\t\tif (typeof alias !== 'undefined') {\r\n\t\t\tthis.aliasToTopic.get(alias) // LRU update\r\n\t\t}\r\n\t\treturn alias\r\n\t}\r\n\r\n\t/**\r\n\t * Clear all entries\r\n\t */\r\n\tclear() {\r\n\t\tthis.aliasToTopic.clear()\r\n\t\tthis.topicToAlias = {}\r\n\t\tthis.numberAllocator.clear()\r\n\t\tthis.length = 0\r\n\t}\r\n\r\n\t/**\r\n\t * Get Least Recently Used (LRU) topic alias\r\n\t * @returns {Number} - if vacant alias exists then return it, otherwise then return LRU alias\r\n\t */\r\n\tgetLruAlias(): number {\r\n\t\tconst alias = this.numberAllocator.firstVacant()\r\n\t\tif (alias) return alias\r\n\t\t// get last alias (key) from LRU cache\r\n\t\treturn [...this.aliasToTopic.keys()][this.aliasToTopic.size - 1]\r\n\t}\r\n}\r\n"],"mappings":";;;;;AAGA,MAAAA,WAAA,GAAAC,OAAA;AACA,MAAAC,kBAAA,GAAAD,OAAA;AAOA,MAAqBE,cAAc;EAWlCC,YAAYC,GAAW;IACtB,IAAIA,GAAG,GAAG,CAAC,EAAE;MACZ,IAAI,CAACC,YAAY,GAAG,IAAIN,WAAA,CAAAO,QAAQ,CAAiB;QAAEF;MAAG,CAAE,CAAC;MACzD,IAAI,CAACG,YAAY,GAAG,EAAE;MACtB,IAAI,CAACC,eAAe,GAAG,IAAIP,kBAAA,CAAAQ,eAAe,CAAC,CAAC,EAAEL,GAAG,CAAC;MAClD,IAAI,CAACA,GAAG,GAAGA,GAAG;MACd,IAAI,CAACM,MAAM,GAAG,CAAC;;EAEjB;EAQAC,GAAGA,CAACC,KAAa,EAAEC,KAAa;IAC/B,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,GAAG,IAAI,CAACT,GAAG,EAAE;MACpC,OAAO,KAAK;;IAEb,MAAMU,KAAK,GAAG,IAAI,CAACT,YAAY,CAACU,GAAG,CAACF,KAAK,CAAC;IAC1C,IAAIC,KAAK,EAAE;MACV,OAAO,IAAI,CAACP,YAAY,CAACO,KAAK,CAAC;;IAEhC,IAAI,CAACT,YAAY,CAACW,GAAG,CAACH,KAAK,EAAED,KAAK,CAAC;IACnC,IAAI,CAACL,YAAY,CAACK,KAAK,CAAC,GAAGC,KAAK;IAChC,IAAI,CAACL,eAAe,CAACS,GAAG,CAACJ,KAAK,CAAC;IAC/B,IAAI,CAACH,MAAM,GAAG,IAAI,CAACL,YAAY,CAACa,IAAI;IACpC,OAAO,IAAI;EACZ;EAOAC,eAAeA,CAACN,KAAa;IAC5B,OAAO,IAAI,CAACR,YAAY,CAACU,GAAG,CAACF,KAAK,CAAC;EACpC;EAOAO,eAAeA,CAACR,KAAa;IAC5B,MAAMC,KAAK,GAAG,IAAI,CAACN,YAAY,CAACK,KAAK,CAAC;IACtC,IAAI,OAAOC,KAAK,KAAK,WAAW,EAAE;MACjC,IAAI,CAACR,YAAY,CAACU,GAAG,CAACF,KAAK,CAAC;;IAE7B,OAAOA,KAAK;EACb;EAKAQ,KAAKA,CAAA;IACJ,IAAI,CAAChB,YAAY,CAACgB,KAAK,EAAE;IACzB,IAAI,CAACd,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,eAAe,CAACa,KAAK,EAAE;IAC5B,IAAI,CAACX,MAAM,GAAG,CAAC;EAChB;EAMAY,WAAWA,CAAA;IACV,MAAMT,KAAK,GAAG,IAAI,CAACL,eAAe,CAACe,WAAW,EAAE;IAChD,IAAIV,KAAK,EAAE,OAAOA,KAAK;IAEvB,OAAO,CAAC,GAAG,IAAI,CAACR,YAAY,CAACmB,IAAI,EAAE,CAAC,CAAC,IAAI,CAACnB,YAAY,CAACa,IAAI,GAAG,CAAC,CAAC;EACjE;;AAnFDO,OAAA,CAAAC,OAAA,GAAAxB,cAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}