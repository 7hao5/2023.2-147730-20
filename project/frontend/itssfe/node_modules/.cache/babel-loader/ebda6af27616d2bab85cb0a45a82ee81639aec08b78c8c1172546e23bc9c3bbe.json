{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst ack_1 = require(\"./ack\");\nconst topic_alias_send_1 = __importDefault(require(\"../topic-alias-send\"));\nconst shared_1 = require(\"../shared\");\nconst handleConnack = (client, packet) => {\n  client.log('_handleConnack');\n  const {\n    options\n  } = client;\n  const version = options.protocolVersion;\n  const rc = version === 5 ? packet.reasonCode : packet.returnCode;\n  clearTimeout(client['connackTimer']);\n  delete client['topicAliasSend'];\n  if (packet.properties) {\n    if (packet.properties.topicAliasMaximum) {\n      if (packet.properties.topicAliasMaximum > 0xffff) {\n        client.emit('error', new Error('topicAliasMaximum from broker is out of range'));\n        return;\n      }\n      if (packet.properties.topicAliasMaximum > 0) {\n        client['topicAliasSend'] = new topic_alias_send_1.default(packet.properties.topicAliasMaximum);\n      }\n    }\n    if (packet.properties.serverKeepAlive && options.keepalive) {\n      options.keepalive = packet.properties.serverKeepAlive;\n    }\n    if (packet.properties.maximumPacketSize) {\n      if (!options.properties) {\n        options.properties = {};\n      }\n      options.properties.maximumPacketSize = packet.properties.maximumPacketSize;\n    }\n  }\n  if (rc === 0) {\n    client.reconnecting = false;\n    client['_onConnect'](packet);\n  } else if (rc > 0) {\n    const err = new shared_1.ErrorWithReasonCode(`Connection refused: ${ack_1.ReasonCodes[rc]}`, rc);\n    client.emit('error', err);\n  }\n};\nexports.default = handleConnack;","map":{"version":3,"names":["ack_1","require","topic_alias_send_1","__importDefault","shared_1","handleConnack","client","packet","log","options","version","protocolVersion","rc","reasonCode","returnCode","clearTimeout","properties","topicAliasMaximum","emit","Error","default","serverKeepAlive","keepalive","maximumPacketSize","reconnecting","err","ErrorWithReasonCode","ReasonCodes","exports"],"sources":["C:\\Users\\vuhuy\\OneDrive - Hanoi University of Science and Technology\\NEWCODE\\ITSS_JP_2\\node_modules\\mqtt\\src\\lib\\handlers\\connack.ts"],"sourcesContent":["import { ReasonCodes } from './ack'\r\nimport TopicAliasSend from '../topic-alias-send'\r\nimport { ErrorWithReasonCode, PacketHandler } from '../shared'\r\nimport { IConnackPacket } from 'mqtt-packet'\r\n\r\nconst handleConnack: PacketHandler = (client, packet: IConnackPacket) => {\r\n\tclient.log('_handleConnack')\r\n\tconst { options } = client\r\n\tconst version = options.protocolVersion\r\n\tconst rc = version === 5 ? packet.reasonCode : packet.returnCode\r\n\r\n\tclearTimeout(client['connackTimer'])\r\n\tdelete client['topicAliasSend']\r\n\r\n\tif (packet.properties) {\r\n\t\tif (packet.properties.topicAliasMaximum) {\r\n\t\t\tif (packet.properties.topicAliasMaximum > 0xffff) {\r\n\t\t\t\tclient.emit(\r\n\t\t\t\t\t'error',\r\n\t\t\t\t\tnew Error('topicAliasMaximum from broker is out of range'),\r\n\t\t\t\t)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (packet.properties.topicAliasMaximum > 0) {\r\n\t\t\t\tclient['topicAliasSend'] = new TopicAliasSend(\r\n\t\t\t\t\tpacket.properties.topicAliasMaximum,\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (packet.properties.serverKeepAlive && options.keepalive) {\r\n\t\t\toptions.keepalive = packet.properties.serverKeepAlive\r\n\t\t}\r\n\r\n\t\tif (packet.properties.maximumPacketSize) {\r\n\t\t\tif (!options.properties) {\r\n\t\t\t\toptions.properties = {}\r\n\t\t\t}\r\n\t\t\toptions.properties.maximumPacketSize =\r\n\t\t\t\tpacket.properties.maximumPacketSize\r\n\t\t}\r\n\t}\r\n\r\n\tif (rc === 0) {\r\n\t\tclient.reconnecting = false\r\n\t\tclient['_onConnect'](packet)\r\n\t} else if (rc > 0) {\r\n\t\tconst err = new ErrorWithReasonCode(\r\n\t\t\t`Connection refused: ${ReasonCodes[rc]}`,\r\n\t\t\trc,\r\n\t\t)\r\n\t\tclient.emit('error', err)\r\n\t}\r\n}\r\n\r\nexport default handleConnack\r\n"],"mappings":";;;;;;;;;;AAAA,MAAAA,KAAA,GAAAC,OAAA;AACA,MAAAC,kBAAA,GAAAC,eAAA,CAAAF,OAAA;AACA,MAAAG,QAAA,GAAAH,OAAA;AAGA,MAAMI,aAAa,GAAkBA,CAACC,MAAM,EAAEC,MAAsB,KAAI;EACvED,MAAM,CAACE,GAAG,CAAC,gBAAgB,CAAC;EAC5B,MAAM;IAAEC;EAAO,CAAE,GAAGH,MAAM;EAC1B,MAAMI,OAAO,GAAGD,OAAO,CAACE,eAAe;EACvC,MAAMC,EAAE,GAAGF,OAAO,KAAK,CAAC,GAAGH,MAAM,CAACM,UAAU,GAAGN,MAAM,CAACO,UAAU;EAEhEC,YAAY,CAACT,MAAM,CAAC,cAAc,CAAC,CAAC;EACpC,OAAOA,MAAM,CAAC,gBAAgB,CAAC;EAE/B,IAAIC,MAAM,CAACS,UAAU,EAAE;IACtB,IAAIT,MAAM,CAACS,UAAU,CAACC,iBAAiB,EAAE;MACxC,IAAIV,MAAM,CAACS,UAAU,CAACC,iBAAiB,GAAG,MAAM,EAAE;QACjDX,MAAM,CAACY,IAAI,CACV,OAAO,EACP,IAAIC,KAAK,CAAC,+CAA+C,CAAC,CAC1D;QACD;;MAED,IAAIZ,MAAM,CAACS,UAAU,CAACC,iBAAiB,GAAG,CAAC,EAAE;QAC5CX,MAAM,CAAC,gBAAgB,CAAC,GAAG,IAAIJ,kBAAA,CAAAkB,OAAc,CAC5Cb,MAAM,CAACS,UAAU,CAACC,iBAAiB,CACnC;;;IAGH,IAAIV,MAAM,CAACS,UAAU,CAACK,eAAe,IAAIZ,OAAO,CAACa,SAAS,EAAE;MAC3Db,OAAO,CAACa,SAAS,GAAGf,MAAM,CAACS,UAAU,CAACK,eAAe;;IAGtD,IAAId,MAAM,CAACS,UAAU,CAACO,iBAAiB,EAAE;MACxC,IAAI,CAACd,OAAO,CAACO,UAAU,EAAE;QACxBP,OAAO,CAACO,UAAU,GAAG,EAAE;;MAExBP,OAAO,CAACO,UAAU,CAACO,iBAAiB,GACnChB,MAAM,CAACS,UAAU,CAACO,iBAAiB;;;EAItC,IAAIX,EAAE,KAAK,CAAC,EAAE;IACbN,MAAM,CAACkB,YAAY,GAAG,KAAK;IAC3BlB,MAAM,CAAC,YAAY,CAAC,CAACC,MAAM,CAAC;GAC5B,MAAM,IAAIK,EAAE,GAAG,CAAC,EAAE;IAClB,MAAMa,GAAG,GAAG,IAAIrB,QAAA,CAAAsB,mBAAmB,CAClC,uBAAuB1B,KAAA,CAAA2B,WAAW,CAACf,EAAE,CAAC,EAAE,EACxCA,EAAE,CACF;IACDN,MAAM,CAACY,IAAI,CAAC,OAAO,EAAEO,GAAG,CAAC;;AAE3B,CAAC;AAEDG,OAAA,CAAAR,OAAA,GAAef,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}